//a 原数据  b 树状数组

//单点修改 区间查询
inline int lowbit(int x){
  return x&-x;
}
//单点修改 b[idx]增加c
int modify(int idx, int c){
  for  (int i = idx ; i <= n ; i += lowbit(i)){
    b[i] += c;
  }
}
//初始化树状数组
void init(){
  for (int i = 1 ; i <= n ; i ++){
    modify(i,a[i]);
  }
}
//区间查询 [1,x]
int query(int t){
  int ans = 0;
  for (int i = t ; i >= 1 ; i -= lowbit(i))ans += b[i];
  return ans;
}

//区间修改单点查询
//a 原数据 b 差分数组 c 差分树状数组
//exmp：a = 1 5  4  2 3
//      b = 1 4 -1 -2 1
//      c = 1 5 -1  2 1
//给[2,4]+2
//      a = 1 7  6  4  3
//      b = 1 6 -1 -2 -1
//      c = 1 7 -1  4 -1
//只在差分数组中left和right+1位置分别+x和-x，对树状数组left和right+1位置做单点修改即可实现区间修改，调用query直接求单点
int lowbit(int x){
    return x&-x;
}

void modify(int idx,int x){
    for (int i = idx ; i <= n ; i += lowbit(i)) c[i] += x;
}

ll query(int t) {
    ll ans = 0;
    for (int i = t ; i >= 1 ; i -= lowbit(i)) ans += c[i];
    return ans;
}
